const { query } = require('./config/database');

// --- PEGA AQU√ç TUS DATOS ---
const notesData = `
SP42H; notas marinas, pomelo, mandarina; hoja de laurel, jazm√≠n; √°mbar gris, madera de gaiac, musgo de roble, pachul√≠
SP5H; lima, lim√≥n, bergamota, jazm√≠n, naranja, mandarina, nerol√≠; notas marinas, jazm√≠n, calone, durazno, fresia, jacinto, romero, ciclamen, violeta, cilantro, nuez moscada, rosa, reseda; almizcle blanco, cedro, musgo de roble, pachul√≠, √°mbar
SP4H; lima, lim√≥n, bergamota, jazm√≠n, naranja, mandarina, nerol√≠; notas marinas, jazm√≠n, calone, durazno, fresia, jacinto, romero, ciclamen, violeta, cilantro, nuez moscada, rosa, reseda; almizcle blanco, cedro, musgo de roble, pachul√≠, √°mbar
SP53H; mandarina roja, pomelo, menta; canela, notas especiadas, rosa; √°mbar, cuero, notas amaderadas, pachul√≠ hind√∫
SP77H; bergamota de Calabria, pimienta; pimienta de Sichuan, lavanda, pimienta rosa, vetiver, pachul√≠, geranio, elem√≠; ambroxan, cedro, l√°dano
SP76H; notas marinas, bergamota; romero, salvia, geranio; incienso, pachul√≠
SP84H; flor de azahar del naranjo, pimienta negra; whiskey, laureles; √°mbar, √°mbar gris, sal
SP1H; notas verdes, toronja, especias, bergamota, lavanda, petit grain; jengibre, violeta, gardenia, salvia; almizcle, s√°ndalo, incienso, madera de gaiac, vetiver, l√°dano
SP94H; canela, nuez moscada, cardamomo, toronja; lavanda; regaliz, s√°ndalo, √°mbar, pachul√≠, vetiver de Hait√≠
SP73H; lim√≥n, salvia; pralin√©, canela, b√°lsamo de tol√∫, cardamomo negro; palo de rosa de Brasil, pachul√≠, √°mbar negro
SP60H; pepino, mel√≥n, mandarina; albahaca, salvia, geranio; gamuza, notas amaderadas, almizcle
SP34H; bergamota, c√≠tricos, pimienta; lavanda, pimienta rosa, vetiver, pachul√≠; ambroxan, cedro, l√°dano
SP62H; aldeh√≠dos, menta, lavanda, bergamota, mandarina, lim√≥n, abr√≥tano, nerol√≠; hierba marina, jengibre, jazm√≠n, geranio, palo de rosa de Brasil, violeta persa, rosa; almizcle, s√°ndalo, cedro, madera de gaiac, √°mbar
SP38H; manzana verde, menta, lavanda, pomelo, albahaca; salvia, geranio, clavel, jazm√≠n; abeto, cedro, pachul√≠
SP93H; lavanda, c√°scara de lim√≥n, lim√≥n de Amalfi; lavanda, humo, notas terrosas, manzana, pachul√≠; vainilla, lavanda, vetiver
SP45H; lavanda, menta, bergamota, abr√≥tano, cardamomo; canela, flor de azahar de naranjo, alcaravea; vainilla, haba tonka, √°mbar, s√°ndalo, cedro
SP10H; lim√≥n, bergamota; an√≠s estrellado, flor del olivo, madera de gaiac; cuero, haba tonka, tabaco
SP100H; casta√±a, az√∫car; salvia, lavanda; vainilla, humo
SP59H; lim√≥n, naranja tangerina, ajenjo; mango, salvia; s√°ndalo, pachul√≠, haba tonka
SP50H; pomelo, bergamota, mandarina siciliana, enebro de Virginia; pimienta, romero, palo de rosa de Brasil; almizcle, incienso, musgo de roble
SP17H; pomelo, lim√≥n, menta, pimienta rosa; jengibre, nuez moscada, jazm√≠n, Iso E Super; incienso, vetiver, cedro, s√°ndalo, pachul√≠, l√°dano, almizcle blanco
SP12H; lavanda, an√≠s, lim√≥n, alcaravea, albahaca, bergamota, esclarea, iris; vetiver, s√°ndalo, pachul√≠, cedro, bayas de enebro, cardamomo; musgo de roble, cuero, √°mbar, almizcle, haba tonka
SP75H; lim√≥n de Amalfi, lavanda; cipriol (nagarmota), notas marinas; √°mbar, pachul√≠
SP97H; menta, manzana verde, lim√≥n; haba tonka, ambroxan, geranio; vainilla de Madagascar, cedro, vetiver, musgo de roble
SP63H; ar√°ndano, pomelo, lim√≥n italiano; azafr√°n, salvia; √°mbar
SP13H; manzana, ciruela, bergamota, lim√≥n, musgo de roble, geranio; canela, caoba, clavel; vainilla, s√°ndalo, cedro, vetiver, olivo
SP99H; mandarina, esclarea; caramelo, haba tonka; vetiver
SP96H; pimienta blanca, bergamota, pimienta rosa; cedro, esclarea; haba tonka, cacao
SP2H; mandarina, bergamota, notas verdes; pimienta, flores, cardamomo; vainilla, madera de gaiac, s√°ndalo, almizcle, √°mbar
SP69H; menta, √°mbar; vetiver, pimienta, notas especiadas; musgo de roble, vainilla
SP56H; romero, esclarea, palo de rosa de Brasil; lavanda, geranio, haba tonka; musgo de roble, miel, almizcle, √°mbar
SP9H; menta, mandarina; lim√≥n, flor de jengibre; vetiver, notas acu√°ticas, √°mbar
SP32H; lavanda, lim√≥n, bergamota, mandarina; salvia, bayas de enebro, albahaca, geranio, cilantro, jazm√≠n, flor de azahar, azucena, lirio de los valles; s√°ndalo, vetiver, almizcle, palo de rosa de Brasil, √°mbar
SP98H; bergamota; coco; haba tonka
SP71H; cactus, naranja china, estrag√≥n; pimiento morr√≥n, geranio africano, cedro; s√°ndalo, cedro, almizcle blanco
SP7H; lavanda, menta, notas afrutadas y especias, cilantro, notas verdes, bergamota; caramelo, pachul√≠, miel, leche, cedro, jazm√≠n, lirio de los valles; caf√©, pachul√≠, vainilla, haba tonka, benju√≠, √°mbar, s√°ndalo, almizcle
SP68H; menta, bergamota, pomelo, lavanda; manzana granny smith, ar√°ndano, rosa; flor del algodonero, cactus, √°mbar
SP58H; bayas de enebro, abr√≥tano, alcaravea, albahaca, cilantro, bergamota; agujas de pino, cuero, manzanilla, pimienta, clavel, geranio, jazm√≠n, rosa; tabaco, musgo de rosa, pachul√≠, cedro, vetiver, almizcle, √°mbar
`;
// ----------------------------------

/**
 * Convierte un string de notas separadas por coma a un array de strings JSON.
 * @param {string} notesString - Ejemplo: "nota1, nota2, nota3"
 * @returns {string} - Ejemplo: '["nota1","nota2","nota3"]'
 */
const formatNotes = (notesString) => {
  if (!notesString || notesString.trim() === '') {
    return JSON.stringify([]);
  }
  // No dividir el string, guardarlo como un √∫nico elemento en el array.
  const notesArray = [notesString.trim()];
  return JSON.stringify(notesArray);
};

async function updateOlfactoryNotes() {
  const isLive = process.argv.includes('--live');
  
  if (isLive) {
    console.log('üî¥ MODO REAL: Se aplicar√°n los cambios a la base de datos.\n');
  } else {
    console.log('üü° MODO SIMULACI√ìN (Dry Run): No se har√°n cambios en la base de datos.\n');
    console.log('Para aplicar los cambios, ejecuta: node sillage-backend-vercel/update-olfactory-notes.js --live\n');
  }

  const lines = notesData.trim().split('\n');
  let totalProductsToUpdate = 0;

  for (const line of lines) {
    const [baseSku, topNotes, middleNotes, baseNotes] = line.split(';').map(item => item.trim());

    if (!baseSku) continue;

    console.log('--------------------------------------------------');
    console.log(`üîÑ Procesando SKU Base: ${baseSku}`);

    const formattedTop = formatNotes(topNotes);
    const formattedMiddle = formatNotes(middleNotes);
    const formattedBase = formatNotes(baseNotes);

    const findProductsSql = `SELECT sku FROM products WHERE sku LIKE ?`;
    const likePattern = `${baseSku}-%`;
    
    const productsToUpdate = await query(findProductsSql, [likePattern]);

    if (productsToUpdate.length === 0) {
      console.log(`  - ‚ö†Ô∏è No se encontraron variantes para ${baseSku} (patr√≥n: ${likePattern})`);
      continue;
    }

    console.log(`  - ‚úÖ Encontradas ${productsToUpdate.length} variantes: ${productsToUpdate.map(p => p.sku).join(', ')}`);
    totalProductsToUpdate += productsToUpdate.length;

    const updateSql = `
      UPDATE products 
      SET 
        fragrance_profile = ?,
        fragrance_notes_middle = ?,
        fragrance_notes_base = ?
      WHERE sku LIKE ?
    `;

    if (isLive) {
      try {
        const result = await query(updateSql, [formattedTop, formattedMiddle, formattedBase, likePattern]);
        console.log(`  - üíæ ${result.affectedRows} productos actualizados en la base de datos.`);
      } catch (error) {
        console.error(`  - ‚ùå Error actualizando ${baseSku}:`, error.message);
      }
    } else {
      console.log(`  - üìù (Simulaci√≥n) Se ejecutar√≠a la siguiente consulta SQL:`);
      console.log(`     QUERY: ${updateSql.replace(/\s+/g, ' ').trim()}`);
      console.log(`     DATOS: [${formattedTop}, ${formattedMiddle}, ${formattedBase}, ${likePattern}]`);
    }
    console.log(`--------------------------------------------------\n`);
  }

  console.log('==================================================');
  if (isLive) {
    console.log(`üéâ Proceso completado. Se actualizaron un total de ${totalProductsToUpdate} productos.`);
  } else {
    console.log(`üèÅ Simulaci√≥n finalizada. Se habr√≠an actualizado un total de ${totalProductsToUpdate} productos.`);
    console.log('Para aplicar los cambios, ejecuta: node sillage-backend-vercel/update-olfactory-notes.js --live');
  }
  console.log('==================================================');
  process.exit(0);
}

updateOlfactoryNotes().catch(error => {
  console.error('\n‚ùå Ocurri√≥ un error fatal durante la ejecuci√≥n del script:');
  console.error(error);
  process.exit(1);
});
